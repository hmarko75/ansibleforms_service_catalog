name: Create New Volume For Service
help: This is used to create new volume for a service
roles:
  - Provision
description: New volume creation
categories:
  - Provision
icon: scroll
playbook: create_service_vol.yaml
inventory: hosts
type: ansible
fields:
  - type: expression
    name: settings
    label: settings
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','')
    noOutput: true
    hide: true
  - type: expression
    name: aiqum
    expression: fn.fnJq($(settings),'.general.aiqum')
    label: aiqum
    hide: true
    noOutput: true
  - type: expression
    name: datasource_info
    label: datasource_info
    expression: fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/admin/datasources/clusters','','AIQUM','[.records[]|{name:.name}+{key:.key}]','','')
    hide: true
    noOutput: true    
  - type: expression
    name: aiqumlogin
    label: aiqumlogin
    expression: "'AIQUM'"
    asCredential: true
    hide: true    
  - type: expression
    name: login
    expression: "'ONTAP'"
    label: login
    asCredential: true
    hide: true
  - type: query
    name: service
    label: Service
    expression: fn.fnJq($(settings),'.services|keys')
    required: true
    default: __auto__
    model: general.service
  - type: query
    name: company
    label: Company
    expression: fn.fnJq($(settings),'.services|."$(service)"|keys')
    required: true
    default: __auto__
    model: general.company
  - type: query
    name: environment
    label: Environment
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|keys')
    required: true
    default: __auto__
    model: general.environment
  - type: query
    name: location
    label: Location
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|keys')
    required: true
    default: __auto__
    model: general.location
  - type: expression
    name: copy_types_jq
    label: copy_types_jq
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|keys')
    noOutput: true
  - type: expression
    name: dr1
    label: dr1
    hide: true
    runLocal: true
    expression: $(copy_types_jq).includes('dr1')
    noOutput: true
  - type: expression
    name: b2d1
    label: b2d1
    hide: true
    runLocal: true
    expression: $(copy_types_jq).includes('b2d1')
    noOutput: true

  - type: expression
    name: dr2
    label: dr2
    hide: true
    runLocal: true
    expression: $(copy_types_jq).includes('dr2')
    noOutput: true

  - type: expression
    name: b2d2
    label: b2d2
    hide: true
    runLocal: true
    expression: $(copy_types_jq).includes('b2d2')
    noOutput: true
  - type: expression
    name: aggr_filter_jq
    label: aggr_filter_jq
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.prod|.clusters|keys|join("%7C")')
    group: Production
    noOutput: true

  - type: checkbox
    name: flexgroup
    label: Provision as Flex Group ? 
    default: false
    placeholder: Provision as Flex Group ?
    required: false
    group: Production
    model: prod.flexgroup

  - type: query
    name: cluster
    label: Select cluster
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/cluster/clusters?name=$(aggr_filter_jq)','','AIQUM',
      'def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 +
      0.5|floor/100.0;[.records[]|{Name:.name}+{Version:((.version.generation|t\
      ostring)+\".\"+(.version.major|tostring)+\".\"+(.version.minor|tostring))\
      }+{Location: .location}+{Contact:.contact}+{\"Total
      Capacity\":(.storage_capacity.total/1024/1024/1024)|round|gb}+{\"Available
      Capacity\":(.storage_capacity.available/1024/1024/1024)|round|gb}+{AvailR\
      aw:.storage_capacity.available}]',[{AvailRaw:{direction:\"desc\"}},{Perf:\
      {direction:\"asc\"}}],'')"
    columns:
      - Name
      - Version
      - Location
      - Contact
      - Total Capacity
      - Available Capacity
    required: true
    default: __auto__
    group: Production
    outputObject: false
    model: prod.cluster

  - type: query
    name: aggregate
    label: Aggregate
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name}+{Cluster:
      .cluster.name}+{Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    default: __auto__
    group: Production
    outputObject: false
    model: prod.aggregate
    dependencies:
      - name: flexgroup
        values:
          - false     

  - type: query
    name: fg_aggrs
    label: Aggregates
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name} + {Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    multiple: true
    sticky: true    
    default: __all__
    group: Production
    outputObject: false
    model: prod.aggrlist
    dependencies:
      - name: flexgroup
        values:
          - true      

  - type: expression
    name: fg_aggr_list_multiplier
    expression: fn.fnJq($(settings),'.VolumeDefaults.aggr_list_multiplier')
    hide: true
    noOutput: true

  - type: expression
    name: cluster_key
    label: cluster_key
    expression: fn.fnJq($(datasource_info),'.[]|select(.name=="$(cluster)")|.key')
    hide: true
    group: Production
    model: prod.clusterkey    

  - type: expression
    name: svm_filter_jq
    label: svm_filter_jq
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.prod|.clusters|.\"$(cluster)\"|join("%7C")')
    group: Production
    noOutput: true

  - type: query
    name: svm
    label: SVM
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/sv\
      ms?cluster.name=$(cluster)&name=$(svm_filter_jq)','','AIQUM','[.records[]\
      |{Name: .name}]','','')"
    columns:
      - Name
    required: true
    default: __auto__
    group: Production
    model: prod.svm
  - type: expression
    name: existingvols
    label: existingvols
    expression: fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storage/volumes?cluster.name=$(cluster)&svm.name=$(svm)&max_records=1000','','AIQUM','[.records[]|.name]','','')
    hide: true
    group: Production
    noOutput: true
  - type: text
    name: volname
    label: Volume Name
    default: ""
    required: true
    minLength: 1
    maxLength: 30
    regex:
      expression: ^[a-z0-9_]*$
      description: Invalid volume name
    notIn:
      field: existingvols
      description: Volume already exists
    icon: user
    group: Production
    model: prod.volname
  - type: number
    name: volsize
    label: Volume Size (G)
    default: "100"
    required: true
    minValue: 10
    maxValue: 90000
    icon: user
    group: Production
    model: prod.volsize
  - type: enum
    name: secstyle
    label: Security Style
    default: ntfs
    values:
      - ntfs
      - unix
    required: true
    group: Production
    model: prod.secstyle
  - type: text
    name: exports
    label: Export Hosts
    default: ""
    required: false
    regex:
      expression: ([^,]+)
      description: Invalid volume name
    model: prod.exports
    icon: user
    group: Production
  - type: expression
    name: snapshotpolicy
    label: snapshotpolicy
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.prod|.snapshotpolicy')
    group: Production
    model: prod.snapshotpolicy
  - type: expression
    name: efficiency
    label: efficiency
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.prod|.efficiency')
    group: Production
    model: prod.efficiency
  - type: expression
    name: cifsaccess
    label: cifsaccess
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.prod|.cifsaccess')
    model: prod.cifsaccess
  - type: number
    name: cr
    label: Change Request
    default: ""
    required: false
    minValue: 0
    maxValue: 9999999999
    icon: user
    noOutput: true
    group: Information
  - type: text
    name: application
    label: Application
    default: ""
    required: false
    minLength: 1
    maxLength: 30
    regex:
      expression: ^[a-zA-Z0-9א-ת_-\s]*$
      description: Invalid input
    noOutput: true
    icon: user
    group: Information
  - type: text
    name: usedfor
    label: Used For
    default: ""
    required: false
    minLength: 1
    maxLength: 30
    regex:
      expression: ^[a-zA-Z0-9א-ת_-\s]*$
      description: Invalid input
    noOutput: true
    icon: user
    group: Information
  - type: text
    name: unit
    label: Unit
    default: ""
    required: false
    minLength: 1
    maxLength: 30
    regex:
      expression: ^[a-zA-Z0-9א-ת_-\s]*$
      description: Invalid input
    noOutput: true
    icon: user
    group: Information
  - type: text
    name: owner
    label: Owner
    default: ""
    required: false
    minLength: 1
    maxLength: 30
    regex:
      expression: ^[a-zA-Z0-9א-ת_-\s]*$
      description: Invalid input
    noOutput: true
    icon: user
    group: Information
  - type: text
    name: comment
    label: Comment
    default: ""
    required: false
    minLength: 1
    maxLength: 40
    regex:
      expression: ^[a-zA-Z0-9א-ת_-\s]*$
      description: Invalid input
    noOutput: true
    icon: user
    group: Information
  - type: expression
    name: volcomment
    label: volcomment
    hide: true
    expression: "'CR:\"$(cr)\" APPLICATION:\"$(application)\" USEDFOR:\"$(usedfor)\" UNIT:\"$(unit)\" OWNER:\"$(owner)\" COMMENT:\"$(comment)\"'"
    model: general.comment
    noOutput: false
    group: Information
  - type: expression
    name: dr1_volnamesuffix
    label: dr1_volnamesuffix
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr1|.volnamesuffix')
    group: DR1
    noOutput: true
    dependencies:
      - name: dr1
        values:
          - true
  - type: expression
    name: dr1_volname
    label: Volume Name
    hide: true
    expression: "'$(volname)'+'$(dr1_volnamesuffix)'"
    group: DR1
    dependencies:
      - name: dr1
        values:
          - true
    model: dr1.volname
  - type: expression
    name: dr1_sizeratio
    label: dr1_sizeratio
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr1|.sizeratio')
    group: DR1
    noOutput: true
    dependencies:
      - name: dr1
        values:
          - true
  - type: expression
    name: dr1_volsize
    label: Volume Size
    hide: true
    runLocal: true
    expression: ($(volsize)*$(dr1_sizeratio)).toString()
    group: DR1
    dependencies:
      - name: dr1
        values:
          - true
    model: dr1.volsize
  - type: expression
    name: dr1_dedicated_cluster
    label: dr1_dedicated_cluster
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr1|.fixed_relationship_for_prod|.\"$(cluster)_$(svm)\"|.cluster')
    group: DR1
    noOutput: true
    dependencies:
      - name: dr1
        values:
          - true
  - type: expression
    name: dr1_dedicated_svm
    label: dr1_dedicated_svm
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr1|.fixed_relationship_for_prod|.\"$(cluster)_$(svm)\"|.svm')
    group: DR1
    noOutput: true
    dependencies:
      - name: dr1
        values:
          - true
  - type: expression
    name: dr1_aggr_filter_jq
    label: dr1_aggr_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(dr1_dedicated_cluster)" != "null" then "$(dr1_dedicated_cluster)" else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr1|.clusters|keys|join("%7C")
      end')
    group: DR1
    noOutput: true
    dependencies:
      - name: dr1
        values:
          - true

  - type: expression
    name: dr1_flexgroup
    hide: true
    expression: "($(flexgroup)&&$(dr1))?true:false"
    runLocal: true
    group: DR1
    noOutput: true
    dependencies:
      - name: dr1
        values:
          - true

  - type: query
    name: dr1_cluster
    label: Select cluster
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/cluster/clusters?name=$(dr1_aggr_filter_jq)','','AIQUM',
      'def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 +
      0.5|floor/100.0;[.records[]|{Name:.name}+{Version:((.version.generation|t\
      ostring)+\".\"+(.version.major|tostring)+\".\"+(.version.minor|tostring))\
      }+{Location: .location}+{Contact:.contact}+{\"Total
      Capacity\":(.storage_capacity.total/1024/1024/1024)|round|gb}+{\"Available
      Capacity\":(.storage_capacity.available/1024/1024/1024)|round|gb}+{AvailR\
      aw:.storage_capacity.available}]',[{AvailRaw:{direction:\"desc\"}},{Perf:\
      {direction:\"asc\"}}],'')"
    columns:
      - Name
      - Version
      - Location
      - Contact
      - Total Capacity
      - Available Capacity
    required: true
    default: __auto__
    group: DR1
    outputObject: false
    model: dr1.cluster
    dependencies:
      - name: dr1
        values:
          - true

  - type: query
    name: dr1_aggregate
    label: Aggregate
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(dr1_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name}+{Cluster:
      .cluster.name}+{Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    default: __auto__
    group: DR1
    outputObject: false
    model: dr1.aggregate
    dependencies:
      - name: dr1_flexgroup
        values:
          - false     

  - type: query
    name: dr1_fg_aggrs
    label: Aggregates
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(dr1_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name} + {Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    multiple: true
    sticky: true    
    default: __all__
    group: DR1
    outputObject: false
    model: dr1.aggrlist
    dependencies:
     - name: dr1_flexgroup
       values:
         - true 

  - type: expression
    name: dr1_fg_dc_ok
    label: FG Data constituent
    hide: false
    expression: Number.isInteger($(fg_aggrs).length*$(fg_aggr_list_multiplier)/$(dr1_fg_aggrs).length)?'The number of prod data constituates comply with number of selected aggregates':'Cannot host '+($(fg_aggrs).length*$(fg_aggr_list_multiplier)).toString()+'prod flex group data constituates on '+($(dr1_fg_aggrs).length).toString()+' selected aggregates'
    runLocal: true
    noOutput: true
    regex:
      expression: comply
      description: prod data constituates cannot be hosted on the selected aggreagtes
    group: DR1
    dependencies:
      - name: dr1_flexgroup
        values:
          - true          

  - type: expression
    name: dr1_cluster_key
    label: dr1_cluster_key
    expression: fn.fnJq($(datasource_info),'.[]|select(.name=="$(dr1_cluster)")|.key')
    hide: true
    group: DR1
    model: dr1.clusterkey
    dependencies:
      - name: dr1
        values:
          - true

  - type: expression
    name: dr1_svm_filter_jq
    label: dr1_svm_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(dr1_dedicated_svm)" != "null" then "$(dr1_dedicated_svm)" else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr1|.clusters|.\"$(dr1_cluster)\"|join("%7C")
      end')
    group: DR1
    noOutput: true
    dependencies:
      - name: dr1
        values:
          - true
  - type: query
    name: dr1_svm
    label: SVM
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/sv\
      ms?cluster.name=$(dr1_cluster)&name=$(dr1_svm_filter_jq)',''\
      ,'AIQUM','[.records[]|{Name: .name}]','','')"
    columns:
      - Name
    required: true
    default: __auto__
    group: DR1
    model: dr1.svm
    dependencies:
      - name: dr1
        values:
          - true
  - type: expression
    name: dr1_source
    label: dr1_source
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr1|.source')
    group: DR1
    dependencies:
      - name: dr1
        values:
          - true
    model: dr1.source

  - type: expression
    name: b2d1_volnamesuffix
    label: b2d1_volnamesuffix
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d1|.volnamesuffix')
    group: B2D1
    noOutput: true
    dependencies:
      - name: b2d1
        values:
          - true
  - type: expression
    name: b2d1_volname
    label: Volume Name
    hide: true
    expression: "'$(volname)'+'$(b2d1_volnamesuffix)'"
    group: B2D1
    dependencies:
      - name: b2d1
        values:
          - true
    model: b2d1.volname
  - type: expression
    name: b2d1_sizeratio
    label: b2d1_sizeratio
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d1|.sizeratio')
    group: B2D1
    noOutput: true
    dependencies:
      - name: b2d1
        values:
          - true
  - type: expression
    name: b2d1_volsize
    label: Volume Size
    hide: true
    runLocal: true
    expression: ($(volsize)*$(b2d1_sizeratio)).toString()
    group: B2D1
    dependencies:
      - name: b2d1
        values:
          - true
    model: b2d1.volsize
  - type: expression
    name: b2d1_dedicated_cluster
    label: b2d1_dedicated_cluster
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d1|.fixed_relationship_for_prod|.\"$(cluster)_$(svm)\"|.cluster')
    group: B2D1
    noOutput: true
    dependencies:
      - name: b2d1
        values:
          - true
  - type: expression
    name: b2d1_dedicated_svm
    label: b2d1_dedicated_svm
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d1|.fixed_relationship_for_prod|.\"$(cluster)_$(svm)\"|.svm')
    group: B2D1
    noOutput: true
    dependencies:
      - name: b2d1
        values:
          - true
  - type: expression
    name: b2d1_aggr_filter_jq
    label: b2d1_aggr_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(b2d1_dedicated_cluster)" != "null" then "$(b2d1_dedicated_cluster)"
      else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d1|.clusters|keys|join("%7C")
      end')
    group: B2D1
    noOutput: true
    dependencies:
      - name: b2d1
        values:
          - true
  - type: expression
    name: b2d1_flexgroup
    hide: true
    expression: "($(flexgroup)&&$(b2d1))?true:false"
    runLocal: true
    group: B2D1
    noOutput: true
    dependencies:
      - name: b2d1
        values:
          - true

  - type: query
    name: b2d1_cluster
    label: Select cluster
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/cluster/clusters?name=$(b2d1_aggr_filter_jq)','','AIQUM',
      'def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 +
      0.5|floor/100.0;[.records[]|{Name:.name}+{Version:((.version.generation|t\
      ostring)+\".\"+(.version.major|tostring)+\".\"+(.version.minor|tostring))\
      }+{Location: .location}+{Contact:.contact}+{\"Total
      Capacity\":(.storage_capacity.total/1024/1024/1024)|round|gb}+{\"Available
      Capacity\":(.storage_capacity.available/1024/1024/1024)|round|gb}+{AvailR\
      aw:.storage_capacity.available}]',[{AvailRaw:{direction:\"desc\"}},{Perf:\
      {direction:\"asc\"}}],'')"
    columns:
      - Name
      - Version
      - Location
      - Contact
      - Total Capacity
      - Available Capacity
    required: true
    default: __auto__
    group: B2D1
    outputObject: false
    model: b2d1.cluster
    dependencies:
      - name: b2d1
        values:
          - true

  - type: query
    name: b2d1_aggregate
    label: Aggregate
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(b2d1_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name}+{Cluster:
      .cluster.name}+{Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    default: __auto__
    group: B2D1
    outputObject: false
    model: b2d1.aggregate
    dependencies:
      - name: b2d1_flexgroup
        values:
          - false     

  - type: query
    name: b2d1_fg_aggrs
    label: Aggregates
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(b2d1_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name} + {Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    multiple: true
    sticky: true    
    default: __all__
    group: B2D1
    outputObject: false
    model: b2d1.aggrlist
    dependencies:
      - name: b2d1_flexgroup
        values:
          - true            

  - type: expression
    name: b2d1_fg_dc_ok
    label: FG Data constituent
    hide: false
    expression: Number.isInteger($(fg_aggrs).length*$(fg_aggr_list_multiplier)/$(b2d1_fg_aggrs).length)?'The number of prod data constituates comply with number of selected aggregates':'Cannot host '+($(fg_aggrs).length*$(fg_aggr_list_multiplier)).toString()+'prod flex group data constituates on '+($(b2d1_fg_aggrs).length).toString()+' selected aggregates'
    runLocal: true
    noOutput: true
    regex:
      expression: comply
      description: prod data constituates cannot be hosted on the selected aggreagtes
    group: B2D1
    dependencies:
      - name: b2d1_flexgroup
        values:
          - true 

  - type: expression
    name: b2d1_cluster_key
    label: b2d1_cluster_key
    expression: fn.fnJq($(datasource_info),'.[]|select(.name=="$(b2d1_cluster)")|.key')
    hide: true
    group: B2D1
    model: b2d1.clusterkey
    dependencies:
      - name: b2d1
        values:
          - true            
  - type: expression
    name: b2d1_svm_filter_jq
    label: b2d1_svm_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(b2d1_dedicated_svm)" != "null" then "$(b2d1_dedicated_svm)" else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d1|.clusters|.\"$(b2d1_cluster)\"|join("%7C")
      end')
    group: B2D1
    noOutput: true
    dependencies:
      - name: b2d1
        values:
          - true
  - type: query
    name: b2d1_svm
    label: SVM
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/sv\
      ms?cluster.name=$(b2d1_cluster)&name=$(b2d1_svm_filter_jq)','','AIQUM','[\
      .records[]|{Name: .name}]','','')"
    columns:
      - Name
    required: true
    default: __auto__
    group: B2D1
    model: b2d1.svm
    dependencies:
      - name: b2d1
        values:
          - true
  - type: expression
    name: b2d1_source
    label: b2d1_source
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d1|.source')
    group: B2D1
    dependencies:
      - name: b2d1
        values:
          - true
    model: b2d1.source


  - type: expression
    name: dr2_volnamesuffix
    label: dr2_volnamesuffix
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr2|.volnamesuffix')
    group: DR2
    noOutput: true
    dependencies:
      - name: dr2
        values:
          - true
  - type: expression
    name: dr2_volname
    label: Volume Name
    hide: true
    expression: "'$(volname)'+'$(dr2_volnamesuffix)'"
    group: DR2
    dependencies:
      - name: dr2
        values:
          - true
    model: dr2.volname
  - type: expression
    name: dr2_sizeratio
    label: dr2_sizeratio
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr2|.sizeratio')
    group: DR2
    noOutput: true
    dependencies:
      - name: dr2
        values:
          - true
  - type: expression
    name: dr2_volsize
    label: Volume Size
    hide: true
    runLocal: true
    expression: ($(volsize)*$(dr2_sizeratio)).toString()
    group: DR2
    dependencies:
      - name: dr2
        values:
          - true
    model: dr2.volsize
  - type: expression
    name: dr2_dedicated_cluster
    label: dr2_dedicated_cluster
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr2|.fixed_relationship_for_prod|.\"$(cluster)_$(svm)\"|.cluster')
    group: DR2
    noOutput: true
    dependencies:
      - name: dr2
        values:
          - true
  - type: expression
    name: dr2_dedicated_svm
    label: dr2_dedicated_svm
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr2|.fixed_relationship_for_prod|.\"$(cluster)_$(svm)\"|.svm')
    group: DR2
    noOutput: true
    dependencies:
      - name: dr2
        values:
          - true
  - type: expression
    name: dr2_aggr_filter_jq
    label: dr2_aggr_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(dr2_dedicated_cluster)" != "null" then "$(dr2_dedicated_cluster)" else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr2|.clusters|keys|join("%7C")
      end')
    group: DR2
    noOutput: true
    dependencies:
      - name: dr2
        values:
          - true

  - type: expression
    name: dr2_flexgroup
    hide: true
    expression: "($(flexgroup)&&$(dr2))?true:false"
    runLocal: true
    group: DR2
    noOutput: true
    dependencies:
      - name: dr2
        values:
          - true

  - type: query
    name: dr2_cluster
    label: Select cluster
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/cluster/clusters?name=$(dr2_aggr_filter_jq)','','AIQUM',
      'def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 +
      0.5|floor/100.0;[.records[]|{Name:.name}+{Version:((.version.generation|t\
      ostring)+\".\"+(.version.major|tostring)+\".\"+(.version.minor|tostring))\
      }+{Location: .location}+{Contact:.contact}+{\"Total
      Capacity\":(.storage_capacity.total/1024/1024/1024)|round|gb}+{\"Available
      Capacity\":(.storage_capacity.available/1024/1024/1024)|round|gb}+{AvailR\
      aw:.storage_capacity.available}]',[{AvailRaw:{direction:\"desc\"}},{Perf:\
      {direction:\"asc\"}}],'')"
    columns:
      - Name
      - Version
      - Location
      - Contact
      - Total Capacity
      - Available Capacity
    required: true
    default: __auto__
    group: DR2
    outputObject: false
    model: dr2.cluster
    dependencies:
      - name: dr2
        values:
          - true

  - type: query
    name: dr2_aggregate
    label: Aggregate
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(dr2_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name}+{Cluster:
      .cluster.name}+{Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    default: __auto__
    group: DR2
    outputObject: false
    model: dr2.aggregate
    dependencies:
      - name: dr2_flexgroup
        values:
          - false     

  - type: query
    name: dr2_fg_aggrs
    label: Aggregates
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(dr2_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name} + {Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    multiple: true
    sticky: true    
    default: __all__
    group: DR2
    outputObject: false
    model: dr2.aggrlist
    dependencies:
      - name: dr2_flexgroup
        values:
          - true  

  - type: expression
    name: dr2_fg_dc_ok
    label: FG Data constituent
    hide: false
    expression: Number.isInteger($(fg_aggrs).length*$(fg_aggr_list_multiplier)/$(dr2_fg_aggrs).length)?'The number of prod data constituates comply with number of selected aggregates':'Cannot host '+($(fg_aggrs).length*$(fg_aggr_list_multiplier)).toString()+'prod flex group data constituates on '+($(dr2_fg_aggrs).length).toString()+' selected aggregates'
    runLocal: true
    noOutput: true
    regex:
      expression: comply
      description: prod data constituates cannot be hosted on the selected aggreagtes
    group: DR2
    dependencies:
      - name: dr2_flexgroup
        values:
          - true  

  - type: expression
    name: dr2_cluster_key
    label: dr2_cluster_key
    expression: fn.fnJq($(datasource_info),'.[]|select(.name=="$(dr2_cluster)")|.key')
    hide: true
    group: DR2
    model: dr2.clusterkey
    dependencies:
      - name: dr2
        values:
          - true          
  - type: expression
    name: dr2_svm_filter_jq
    label: dr2_svm_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(dr2_dedicated_svm)" != "null" then "$(dr2_dedicated_svm)" else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr2|.clusters|.\"$(dr2_cluster)\"|join("%7C")
      end')
    group: DR2
    noOutput: true
    dependencies:
      - name: dr2
        values:
          - true
  - type: query
    name: dr2_svm
    label: SVM
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/sv\
      ms?cluster.name=$(dr2_cluster)&name=$(dr2_svm_filter_jq)','','AIQUM','[.r\
      ecords[]|{Name: .name}]','','')"
    columns:
      - Name
    required: true
    default: __auto__
    group: DR2
    model: dr2.svm
    dependencies:
      - name: dr2
        values:
          - true
  - type: expression
    name: dr2_source
    label: dr2_source
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.dr2|.source')
    group: DR2
    dependencies:
      - name: dr2
        values:
          - true
    model: dr2.source


  - type: expression
    name: b2d2_volnamesuffix
    label: b2d2_volnamesuffix
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d2|.volnamesuffix')
    group: B2D2
    noOutput: true
    dependencies:
      - name: b2d2
        values:
          - true
  - type: expression
    name: b2d2_volname
    label: Volume Name
    hide: true
    expression: "'$(volname)'+'$(b2d2_volnamesuffix)'"
    group: B2D2
    dependencies:
      - name: b2d2
        values:
          - true
    model: b2d2.volname
  - type: expression
    name: b2d2_sizeratio
    label: b2d2_sizeratio
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d2|.sizeratio')
    group: B2D2
    noOutput: true
    dependencies:
      - name: b2d2
        values:
          - true
  - type: expression
    name: b2d2_volsize
    label: Volume Size
    hide: true
    runLocal: true
    expression: ($(volsize)*$(b2d2_sizeratio)).toString()
    group: B2D2
    dependencies:
      - name: b2d2
        values:
          - true
    model: b2d2.volsize
  - type: expression
    name: b2d2_dedicated_cluster
    label: b2d2_dedicated_cluster
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d2|.fixed_relationship_for_prod|."$(cluster)_$(svm)"|.cluster')
    group: B2D2
    noOutput: true
    dependencies:
      - name: b2d2
        values:
          - true
  - type: expression
    name: b2d2_dedicated_svm
    label: b2d2_dedicated_svm
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d2|.fixed_relationship_for_prod|."$(cluster)_$(svm)"|.svm')
    group: B2D2
    noOutput: true
    dependencies:
      - name: b2d2
        values:
          - true
  - type: expression
    name: b2d2_aggr_filter_jq
    label: b2d2_aggr_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(b2d2_dedicated_cluster)" != "null" then "$(b2d2_dedicated_cluster)"
      else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d2|.clusters|keys|join("%7C")
      end')
    group: B2D2
    noOutput: true
    dependencies:
      - name: b2d2
        values:
          - true

  - type: expression
    name: b2d2_flexgroup
    hide: true
    expression: "($(flexgroup)&&$(b2d2))?true:false"
    runLocal: true
    group: B2D2
    noOutput: true
    dependencies:
      - name: b2d2
        values:
          - true

  - type: query
    name: b2d2_cluster
    label: Select cluster
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/cluster/clusters?name=$(b2d2_aggr_filter_jq)','','AIQUM',
      'def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 +
      0.5|floor/100.0;[.records[]|{Name:.name}+{Version:((.version.generation|t\
      ostring)+\".\"+(.version.major|tostring)+\".\"+(.version.minor|tostring))\
      }+{Location: .location}+{Contact:.contact}+{\"Total
      Capacity\":(.storage_capacity.total/1024/1024/1024)|round|gb}+{\"Available
      Capacity\":(.storage_capacity.available/1024/1024/1024)|round|gb}+{AvailR\
      aw:.storage_capacity.available}]',[{AvailRaw:{direction:\"desc\"}},{Perf:\
      {direction:\"asc\"}}],'')"
    columns:
      - Name
      - Version
      - Location
      - Contact
      - Total Capacity
      - Available Capacity
    required: true
    default: __auto__
    group: B2D2
    outputObject: false
    model: b2d2.cluster
    dependencies:
      - name: b2d2
        values:
          - true

  - type: query
    name: b2d2_aggregate
    label: Aggregate
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(b2d2_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name}+{Cluster:
      .cluster.name}+{Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    default: __auto__
    group: B2D2
    outputObject: false
    model: b2d2.aggregate
    dependencies:
      - name: b2d2_flexgroup
        values:
          - false     
  - type: query
    name: b2d2_fg_aggrs
    label: Aggregates
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storag\
      e/aggregates?state=online&cluster.name=$(b2d2_cluster)','','AIQUM','def
      gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def
      roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Aggregate: .name} + {Node: .node.name}+{Size:
      (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.blo\
      ck_storage.available}+{Available:
      (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf:
      (((.performance_capacity.used*100)|roundit|tostring))}+{Type:
      .type}]',[{AvailRaw:{direction:\"desc\"}},{Perf:{direction:\"asc\"}}],'')"
    columns:
      - Aggregate
      - Node
      - Size
      - Available
      - Perf
      - Type
    pctColumns:
      - Perf
    required: true
    multiple: true
    sticky: true    
    default: __all__
    group: B2D2
    outputObject: false
    model: b2d2.aggrlist
    dependencies:
      - name: b2d2_flexgroup
        values:
          - true  

  - type: expression
    name: b2d2_fg_dc_ok
    label: FG Data constituent
    hide: false
    expression: Number.isInteger($(fg_aggrs).length*$(fg_aggr_list_multiplier)/$(b2d2_fg_aggrs).length)?'The number of prod data constituates comply with number of selected aggregates':'Cannot host '+($(fg_aggrs).length*$(fg_aggr_list_multiplier)).toString()+'prod flex group data constituates on '+($(b2d2_fg_aggrs).length).toString()+' selected aggregates'
    runLocal: true
    noOutput: true
    regex:
      expression: comply
      description: prod data constituates cannot be hosted on the selected aggreagtes
    group: B2D2
    dependencies:
      - name: b2d2_flexgroup
        values:
          - true  

  - type: expression
    name: b2d2_cluster_key
    label: b2d2_cluster_key
    expression: fn.fnJq($(datasource_info),'.[]|select(.name=="$(b2d2_cluster)")|.key')
    hide: true
    group: B2D2
    model: b2d2.clusterkey
    dependencies:
      - name: b2d2
        values:
          - true            
  - type: expression
    name: b2d2_svm_filter_jq
    label: b2d2_svm_filter_jq
    hide: true
    expression: fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','if
      "$(b2d2_dedicated_svm)" != "null" then "$(b2d2_dedicated_svm)" else
      .services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d2|.clusters|.\"$(b2d2_cluster)\"|join("%7C")
      end')
    group: B2D2
    noOutput: true
    dependencies:
      - name: b2d2
        values:
          - true
  - type: query
    name: b2d2_svm
    label: SVM
    expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/sv\
      ms?cluster.name=$(b2d2_cluster)&name=$(b2d2_svm_filter_jq)','','AIQUM','[\
      .records[]|{Name: .name}]','','')"
    columns:
      - Name
    required: true
    default: __auto__
    group: B2D2
    model: b2d2.svm
    dependencies:
      - name: b2d2
        values:
          - true
  - type: expression
    name: b2d2_source
    label: b2d2_source
    hide: true
    expression: fn.fnJq($(settings),'.services|."$(service)"|."$(company)"|."$(environment)"|."$(location)"|.b2d2|.source')
    group: B2D2
    dependencies:
      - name: b2d2
        values:
          - true
    model: b2d2.source
source: create_volume.yaml
