- name: Create Snapshot
  help: |
    Create snapshot
  roles:
    - Provision
  description: Create snapshot
  categories:
    - Dataops
  #tileClass: has-background-link
  icon: scroll
  type: ansible
  playbook: dataops_create_snapshot.yaml
  inventory: hosts
  fields:   
  #load global parameters 
  - type: expression
    name: settings
    label: settings
    expression: fn.fnReadYamlFile('/app/dist/persistent/dataops_globals.yaml','')
    noOutput: false
    hide: true   
    model: general

  - type: expression
    name: aiqum
    label: aiqum
    expression: fn.fnJq($(settings),'.aiqum')
    noOutput: true
    hide: true            

  - type: query
    name: cluster
    label: Select Cluster
    expression: "fn.fnRestBasic('get','https://$(aiqum)/api/datacenter/cluster/clusters','','AIQUM',
      'def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 +
      0.5|floor/100.0;[.records[]|{Name:.name}+{Version:((.version.generation|t\
      ostring)+\".\"+(.version.major|tostring)+\".\"+(.version.minor|tostring))\
      }+{Location: .location}+{Contact:.contact}+{\"Total
      Capacity\":(.storage_capacity.total/1024/1024/1024)|round|gb}+{\"Available
      Capacity\":(.storage_capacity.available/1024/1024/1024)|round|gb}+{AvailR\
      aw:.storage_capacity.available}]',[{AvailRaw:{direction:\"desc\"}},{Perf:\
      {direction:\"asc\"}}],'')"
    columns:
      - Name
      - Version
      - Location
      - Contact
      - Total Capacity
      - Available Capacity
    required: true
    default: __auto__
    outputObject: false

  - type: query
    name: volumedetails
    label: Select Volume
    dbConfig:
      name: AIQUMSQL
      type: mysql
    query: select CONCAT(vserver.name,':',volume.name) as
      'SVM:Volume', CONCAT(format(round(volume.size/1024/1024/1024,0),'T0'),'G') as Size,
      round(volume.size/1024/1024/1024,0) as sizeg,
      CONCAT(format(round(volume.sizeUsed/1024/1024/1024,0),'T0'),'G') as Used,
      volume.sizeUsed/volume.size as Utilization, cluster.name as cluster,
      vserver.name as svm, volume.name as volume from netapp_model_view.cluster,
      netapp_model_view.vserver, netapp_model_view.volume 
      where cluster.name = '$(cluster)' and volume.vserverid = vserver.objid and vserver.clusterid = cluster.objid and volume.state =
      'ONLINE' and volume.isVserverRoot = 0 and volume.derivedStyle != 'CONSTITUENT' and volume.volType='RW' and
      vserver.type='DATA' and vserver.subtype='DEFAULT' order by volume.name
    columns:
      - SVM:Volume
      - Size
      - Used
      - Utilization
    pctColumns:
      - Utilization
    required: true
    default: __auto__
    outputObject: true
    noOutput: true

  - type: expression
    name: svm
    expression: "'$(volumedetails.svm)'"
    hide: true

  - type: expression
    name: volname
    expression: "'$(volumedetails.volume)'"
    hide: true

  - type: checkbox
    name: usepolicy
    label: Create snapshot using policy
    default: false
    placeholder: Create snapshot using policy
    required: false

  - type: text
    name: snapshotname
    label: Snapshot Name (or prefix when retention is used)
    default: ""
    required: true
    minLength: 1
    maxLength: 30
    regex:
      expression: ^[a-z0-9_]*$
      description: Invalid snapshot name
    icon: user
    dependencies:
    - name: usepolicy
      values:
        - false   

  - type: text
    name: retention
    label: Snapshot renention (count or number of days)
    placeholder: ex. 12 for 12 snapshot or 5d - for 5 days 
    default: ""
    required: false
    minLength: 1
    maxLength: 5
    regex:
      expression: ^[0-9]*d?$
      description: Invalid retention
    icon: user
    dependencies:
    - name: usepolicy
      values:
        - false   

  - type: query
    name: snapshotpolicy
    label: Snapshot Policy
    expression: "fn.fnJq($(settings),'[.snapshot_policies[]|{Name:.name}+{Keep:.keep}+{Prefix:.prefix}]')"
    columns:
      - Name
      - Keep
      - Prefix
    required: true
    default: __auto__
    icon: user
    noOutput: true
    dependencies:
    - name: usepolicy
      values:
        - true  

  - type: expression
    name: retention_policy
    expression: "'$(snapshotpolicy.Keep)'"
    hide: true  
    model: retention 
    dependencies:
    - name: usepolicy
      values:
        - true 

  - type: expression
    name: prefix_policy
    expression: "'$(snapshotpolicy.Prefix)'"
    hide: true  
    model: snapshotname 
    dependencies:
    - name: usepolicy
      values:
        - true 

  - type: expression
    name: snapmirror_label_policy
    expression: "'$(snapshotpolicy.snapmirror_label)'"
    hide: true  
    model: snapmirror_label 
    dependencies:
    - name: usepolicy
      values:
        - true         

