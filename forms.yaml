categories:
  - name: Default
    icon: bars
  - name: Dataset
    icon: bath
  - name: Create
    icon: bath  
  - name: Clone
    icon: bath             
roles:
  - name: admin
    groups:
      - local/admins
      - ldap/Domain Admins
  - name: operator
    groups:
      - local/operator
  - name: demo
    groups:
      - local/demo
  - name: public
    groups: []
  - name: Provision
    groups:
      - local/Provision Admins  
forms:
  - name: Create New Volume 
    help: |
      This is used to create new volume for a service  
    roles:
      - Provision
    description: New volume creation
    categories:
      - Volume
      - Create
    icon: scroll
    playbook: create_service_vol.yaml
    inventory: hosts
    type: ansible
    fields:
    
      ############################################################################################################################
      # environment General configuration
      ############################################################################################################################    
      - type: expression         # readonly
        name: login
        expression: "'ONTAP'" 
        label: login
        asCredential: true
        hide: true               # hidden on the form   

      - type: expression
        name: aiqum
        expression: "'aiqum.demo.netapp.com'" 
        label: aiqum
        asCredential: true
        hide: true 
        noOutput: true

      ############################################################################################################################
      # filter service, environment, company, location
      ############################################################################################################################

      - type: query
        name: service
        label: Service
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','[.services[] | ({name} + {shortname}) ]')"
        columns:
        - name
        default: __auto__
        model: general.service

      - type: query
        name: company
        label: Company
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','[(.services[] | select (.name==\"$(service.name)\")|.combinations)[]|{name:.company}]|unique')"      
        columns:
        - name
        required: true
        default: __auto__
        model: general.company

      - type: query
        name: environment
        label: Environment
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','[(.services[] | select (.name==\"$(service.name)\")|.combinations)[]| select(.company==\"$(company.name)\")|{name: .environment}]|unique')"
        columns:
        - name
        required: true
        default: __auto__     
        model: general.environment

      - type: query
        name: location
        label: Location
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','[(.services[] | select (.name==\"$(service.name)\")|.combinations)[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\")|{name: .location}]|unique')"
        columns:
        - name
        required: true
        default: __auto__
        model: general.location

      ############################################################################################################################
      # check which copies are needed 
      ############################################################################################################################
      #get the type of copies
      - type: expression
        name: copy_types_jq 
        label: copy_types_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','[.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|.type]')"
        noOutput: true

      #validate dr1 is required copy
      - type: expression
        name: dr1
        label: dr1
        hide: true
        runLocal: true
        expression: "($(copy_types_jq)).includes('dr1')"
        noOutput: true

      #validate dr2 is required copy
      - type: expression
        name: dr2
        label: dr2
        hide: true
        runLocal: true
        expression: "($(copy_types_jq)).includes('dr2')"
        noOutput: true
      #validate b2d1 is required copy
      - type: expression
        name: b2d1
        label: b2d1
        hide: true
        runLocal: true
        expression: "($(copy_types_jq)).includes('b2d1')"
        noOutput: true        
      #validate b2d2 is required copy
      - type: expression
        name: b2d2
        label: b2d2
        hide: true
        runLocal: true
        expression: "($(copy_types_jq)).includes('b2d2')"
        noOutput: true              

      ############################################################################################################################
      # create prod copy location information
      ############################################################################################################################      

      - type: text
        name: volname
        label: Volume Name
        default: ""
        required: true
        minLength: 1
        maxLength: 30
        regex: ^[a-zA-Z0-9_]*$
        regexDescription: Invalid volume name
        icon: user
        group: Production
        model: prod.volname

      - type: number
        name: volsize
        label: Volume Size (G)
        default: "100"
        required: true
        minValue: 10
        maxValue: 90000
        icon: user
        group: Production
        model: prod.volsize
      
      #will build a %7C (|) cluster list that will be used for rest aiqum aggr filter 
      - type: expression
        name: aggr_filter_jq 
        label: aggr_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"prod\")|.clusters[]|keys|join(\"%7C\")')"
        group: Production
        noOutput: true

      #aggr enum 
      - type: query
        name: cluster_aggr
        label: Cluster/Aggregate
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storage/aggregates?state=online&cluster.name=$(aggr_filter_jq)','','AIQUM','def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Resource: (.cluster.name+\" : \"+.name)}+{Aggregate: .name}+{Cluster: .cluster.name}+{Node: .node.name}+{Size: (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.block_storage.available}+{Available: (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf: (((.performance_capacity.used*100)|roundit|tostring)+\"%\")}+{Type: .type}]','(a, b) => a.AvailRaw < b.AvailRaw && 1 || -1','')"
        columns:
        - Resource
        - Node
        - Size
        - Available
        - Perf
        - Type
        required: true
        default: __auto__  
        group: Production
        outputObject: true
        noOutput: true
      
      - type: expression       
        name: cluster
        label: cluster
        expression: "'$(cluster_aggr.Cluster)'"
        hide: true
        group: Production
        model: prod.cluster

      - type: expression       
        name: aggregate
        label: aggregate
        expression: "'$(cluster_aggr.Aggregate)'"
        hide: true
        group: Production
        model: prod.aggregate       
      
      # will build a %7C (|) svm list that will be used for rest aiqum aggr filter 
      - type: expression
        name: svm_filter_jq
        label: svm_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"prod\")|.clusters[]|.$(cluster)|join(\"%7C\")')"
        group: Production
        noOutput: true

      - type: query
        name: svm
        label: SVM
        #expression: "JSON.parse('$(svm_jq)')"
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/svms?cluster.name=$(cluster)&name=$(svm_filter_jq)','','AIQUM','[.records[]|{Name: .name}]','','')"
        columns:
        - Name
        required: true
        # runLocal: true
        default: __auto__  
        group: Production
        model: prod.svm

      ############################################################################################################################
      # create dr1 copy if required
      ############################################################################################################################      

      #dr1 name suffix if provided 
      - type: expression
        name: dr1_namesuffix
        label: dr1_namesuffix
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr1\")|.namesuffix')"
        group: DR1
        noOutput: true
        dependencies:         
        - name: dr1
          values:
          - true 

      #dr1 vol name
      - type: expression
        name: dr1_volname
        label: Volume Name
        hide: true
        expression: "'$(volname)'+'$(dr1_namesuffix)'"
        group: DR1
        dependencies:         
        - name: dr1
          values:
          - true  
        model: dr1.volname

      #dr1 size ratio
      - type: expression
        name: dr1_sizeratio
        label: dr1_sizeratio
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr1\")|.sizeratio')"
        group: DR1
        noOutput: true
        dependencies:         
        - name: dr1
          values:
          - true 

      #vol size will be production vol size multiplied by size ratio
      - type: expression
        name: dr1_volsize
        label: Volume Size
        hide: true
        runLocal: true
        expression: "($(volsize)*$(dr1_sizeratio)).toString()"
        group: DR1
        dependencies:         
        - name: dr1
          values:
          - true  
        model: dr1.volsize

      #will build a %7C (|) cluster list that will be used for rest aiqum aggr filter 
      - type: expression
        name: dr1_aggr_filter_jq 
        label: dr1_aggr_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr1\")|.clusters[]|keys|join(\"%7C\")')"
        group: DR1
        noOutput: true
        dependencies:         
        - name: dr1
          values:
          - true                   

      #aggr enum 
      - type: query
        name: dr1_cluster_aggr
        label: Cluster/Aggregate
        # expression: "JSON.parse('$(dr1_cluster_aggr_jq)')"
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storage/aggregates?state=online&cluster.name=$(dr1_aggr_filter_jq)','','AIQUM','def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Resource: (.cluster.name+\" : \"+.name)}+{Aggregate: .name}+{Cluster: .cluster.name}+{Node: .node.name}+{Size: (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.block_storage.available}+{Available: (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf: (((.performance_capacity.used*100)|roundit|tostring)+\"%\")}+{Type: .type}]','(a, b) => a.AvailRaw < b.AvailRaw && 1 || -1','')"
        columns:
        - Resource
        - Node
        - Size
        - Available
        - Perf
        - Type
        noOutput: true
        default: __auto__
        required: true
        group: DR1
        outputObject: true
        dependencies:         
        - name: dr1
          values:
          - true          
      
      - type: expression       
        name: dr1_cluster
        label: dr1_cluster
        expression: "'$(dr1_cluster_aggr.Cluster)'"
        hide: true
        group: DR1
        model: dr1.cluster
        dependencies:         
        - name: dr1
          values:
          - true          

      - type: expression       
        name: dr1_aggregate
        label: dr1_aggregate
        expression: "'$(dr1_cluster_aggr.Aggregate)'"
        hide: true
        group: DR1
        model: dr1.aggregate
        dependencies:         
        - name: dr1
          values:
          - true              
      
      # will build a %7C (|) svm list that will be used for rest aiqum aggr filter 
      - type: expression
        name: dr1_svm_filter_jq
        label: dr1_svm_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr1\")|.clusters[]|.$(dr1_cluster)|join(\"%7C\")')"
        group: DR1
        noOutput: true
        dependencies:         
        - name: dr1
          values:
          - true                 

      - type: query
        name: dr1_svm
        label: SVM
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/svms?cluster.name=$(dr1_cluster_aggr.Cluster)&name=$(dr1_svm_filter_jq)','','AIQUM','[.records[]|{Name: .name}]','','')"
        columns:
        - Name
        required: true
        default: __auto__  
        group: DR1
        model: dr1.svm
        dependencies:         
        - name: dr1
          values:
          - true  

      #dr1 source
      - type: expression
        name: dr1_source
        label: dr1_source
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr1\")|.source')"
        group: DR1
        dependencies:         
        - name: dr1
          values:
          - true
        model: dr1.source
        
      ############################################################################################################################
      # create dr2 copy if required
      ############################################################################################################################      

      #dr2 name suffix if provided 
      - type: expression
        name: dr2_namesuffix
        label: dr2_namesuffix
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr2\")|.namesuffix')"
        group: DR2
        noOutput: true
        dependencies:         
        - name: dr2
          values:
          - true 

      #dr2 vol name
      - type: expression
        name: dr2_volname
        label: Volume Name
        hide: true
        expression: "'$(volname)'+'$(dr2_namesuffix)'"
        group: DR2
        dependencies:         
        - name: dr2
          values:
          - true  
        model: dr2.volname

      #dr2 size ratio
      - type: expression
        name: dr2_sizeratio
        label: dr2_sizeratio
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr2\")|.sizeratio')"
        group: DR2
        noOutput: true
        dependencies:         
        - name: dr2
          values:
          - true 

      #vol size will be production vol size multiplied by size ratio
      - type: expression
        name: dr2_volsize
        label: Volume Size
        hide: true
        runLocal: true
        expression: "($(volsize)*$(dr2_sizeratio)).toString()"
        group: DR2
        dependencies:         
        - name: dr2
          values:
          - true  
        model: dr2.volsize

      #will build a %7C (|) cluster list that will be used for rest aiqum aggr filter 
      - type: expression
        name: dr2_aggr_filter_jq 
        label: dr2_aggr_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr2\")|.clusters[]|keys|join(\"%7C\")')"
        group: DR2
        noOutput: true
        dependencies:         
        - name: dr2
          values:
          - true                

      #aggr enum 
      - type: query
        name: dr2_cluster_aggr
        label: Cluster/Aggregate
        # expression: "JSON.parse('$(dr2_cluster_aggr_jq)')"
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storage/aggregates?state=online&cluster.name=$(dr2_aggr_filter_jq)','','AIQUM','def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Resource: (.cluster.name+\" : \"+.name)}+{Aggregate: .name}+{Cluster: .cluster.name}+{Node: .node.name}+{Size: (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.block_storage.available}+{Available: (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf: (((.performance_capacity.used*100)|roundit|tostring)+\"%\")}+{Type: .type}]','(a, b) => a.AvailRaw < b.AvailRaw && 1 || -1','')"
        columns:
        - Resource
        - Node
        - Size
        - Available
        - Perf
        - Type
        noOutput: true
        default: __auto__
        required: true
        group: DR2
        outputObject: true
        dependencies:         
        - name: dr2
          values:
          - true          
      
      - type: expression       
        name: dr2_cluster
        label: dr2_cluster
        expression: "'$(dr2_cluster_aggr.Cluster)'"
        hide: true
        group: DR2
        model: dr2.cluster
        dependencies:         
        - name: dr2
          values:
          - true          

      - type: expression       
        name: dr2_aggregate
        label: dr2_aggregate
        expression: "'$(dr2_cluster_aggr.Aggregate)'"
        hide: true
        group: DR2
        model: dr2.aggregate
        dependencies:         
        - name: dr2
          values:
          - true              
      
      # will build a %7C (|) svm list that will be used for rest aiqum aggr filter 
      - type: expression
        name: dr2_svm_filter_jq
        label: dr2_svm_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr2\")|.clusters[]|.$(dr2_cluster)|join(\"%7C\")')"
        group: DR2
        noOutput: true
        dependencies:         
        - name: dr2
          values:
          - true               

      - type: query
        name: dr2_svm
        label: SVM
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/svms?cluster.name=$(dr2_cluster)&name=$(dr2_svm_filter_jq)','','AIQUM','[.records[]|{Name: .name}]','','')"
        columns:
        - Name
        required: true
        default: __auto__  
        group: DR2
        model: dr2.svm
        dependencies:         
        - name: dr2
          values:
          - true  

      #dr2 source
      - type: expression
        name: dr2_source
        label: dr2_source
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"dr2\")|.source')"
        group: DR2
        dependencies:         
        - name: dr2
          values:
          - true
        model: dr2.source

      ############################################################################################################################
      # create b2d1 copy if required
      ############################################################################################################################      

      #b2d1 name suffix if provided 
      - type: expression
        name: b2d1_namesuffix
        label: b2d1_namesuffix
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d1\")|.namesuffix')"
        group: B2D1
        noOutput: true
        dependencies:         
        - name: b2d1
          values:
          - true 

      #b2d1 vol name
      - type: expression
        name: b2d1_volname
        label: Volume Name
        hide: true
        expression: "'$(volname)'+'$(b2d1_namesuffix)'"
        group: B2D1
        dependencies:         
        - name: b2d1
          values:
          - true  
        model: b2d1.volname

      #b2d1 size ratio
      - type: expression
        name: b2d1_sizeratio
        label: b2d1_sizeratio
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d1\")|.sizeratio')"
        group: B2D1
        noOutput: true
        dependencies:         
        - name: b2d1
          values:
          - true 

      #vol size will be production vol size multiplied by size ratio
      - type: expression
        name: b2d1_volsize
        label: Volume Size
        hide: true
        runLocal: true
        expression: "($(volsize)*$(b2d1_sizeratio)).toString()"
        group: B2D1
        dependencies:         
        - name: b2d1
          values:
          - true  
        model: b2d1.volsize

      #will build a %7C (|) cluster list that will be used for rest aiqum aggr filter 
      - type: expression
        name: b2d1_aggr_filter_jq 
        label: b2d1_aggr_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d1\")|.clusters[]|keys|join(\"%7C\")')"
        group: B2D1
        noOutput: true
        dependencies:         
        - name: b2d1
          values:
          - true              

      #aggr enum 
      - type: query
        name: b2d1_cluster_aggr
        label: Cluster/Aggregate
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storage/aggregates?state=online&cluster.name=$(b2d1_aggr_filter_jq)','','AIQUM','def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Resource: (.cluster.name+\" : \"+.name)}+{Aggregate: .name}+{Cluster: .cluster.name}+{Node: .node.name}+{Size: (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.block_storage.available}+{Available: (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf: (((.performance_capacity.used*100)|roundit|tostring)+\"%\")}+{Type: .type}]','(a, b) => a.AvailRaw < b.AvailRaw && 1 || -1','')"
        columns:
        - Resource
        - Node
        - Size
        - Available
        - Perf
        - Type
        noOutput: true
        default: __auto__
        required: true
        group: B2D1
        outputObject: true
        dependencies:         
        - name: b2d1
          values:
          - true          
      
      - type: expression       
        name: b2d1_cluster
        label: b2d1_cluster
        expression: "'$(b2d1_cluster_aggr.Cluster)'"
        hide: true
        group: B2D1
        model: b2d1.cluster
        dependencies:         
        - name: b2d1
          values:
          - true          

      - type: expression       
        name: b2d1_aggregate
        label: b2d1_aggregate
        expression: "'$(b2d1_cluster_aggr.Aggregate)'"
        hide: true
        group: B2D1
        model: b2d1.aggregate
        dependencies:         
        - name: b2d1
          values:
          - true              
      
      # will build a %7C (|) svm list that will be used for rest aiqum aggr filter 
      - type: expression
        name: b2d1_svm_filter_jq
        label: b2d1_svm_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d1\")|.clusters[]|.$(b2d1_cluster)|join(\"%7C\")')"
        group: B2D1
        noOutput: true
        dependencies:         
        - name: b2d1
          values:
          - true               

      - type: query
        name: b2d1_svm
        label: SVM
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/svms?cluster.name=$(b2d1_cluster)&name=$(b2d1_svm_filter_jq)','','AIQUM','[.records[]|{Name: .name}]','','')"
        columns:
        - Name
        required: true
        default: __auto__  
        group: B2D1
        model: b2d1.svm
        dependencies:         
        - name: b2d1
          values:
          - true  

      #B2D1 source
      - type: expression
        name: b2d1_source
        label: b2d1_source
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d1\")|.source')"
        group: B2D1
        dependencies:         
        - name: b2d1
          values:
          - true
        model: b2d1.source          

      ############################################################################################################################
      # create b2d2 copy if required
      ############################################################################################################################      

      #b2d2 name suffix if provided 
      - type: expression
        name: b2d2_namesuffix
        label: b2d2_namesuffix
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d2\")|.namesuffix')"
        group: B2D2
        noOutput: true
        dependencies:         
        - name: b2d2
          values:
          - true 

      #b2d2 vol name
      - type: expression
        name: b2d2_volname
        label: Volume Name
        hide: true
        expression: "'$(volname)'+'$(b2d2_namesuffix)'"
        group: B2D2
        dependencies:         
        - name: b2d2
          values:
          - true  
        model: b2d2.volname

      #b2d2 size ratio
      - type: expression
        name: b2d2_sizeratio
        label: b2d2_sizeratio
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d2\")|.sizeratio')"
        group: B2D2
        noOutput: true
        dependencies:         
        - name: b2d2
          values:
          - true 

      #vol size will be production vol size multiplied by size ratio
      - type: expression
        name: b2d2_volsize
        label: Volume Size
        hide: true
        runLocal: true
        expression: "($(volsize)*$(b2d2_sizeratio)).toString()"
        group: B2D2
        dependencies:         
        - name: b2d2
          values:
          - true  
        model: b2d2.volsize

      #will build a %7C (|) cluster list that will be used for rest aiqum aggr filter 
      - type: expression
        name: b2d2_aggr_filter_jq 
        label: b2d2_aggr_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d2\")|.clusters[]|keys|join(\"%7C\")')"
        group: B2D2
        noOutput: true
        dependencies:         
        - name: b2d2
          values:
          - true                  

      #aggr enum 
      - type: query
        name: b2d2_cluster_aggr
        label: Cluster/Aggregate
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/storage/aggregates?state=online&cluster.name=$(b2d2_aggr_filter_jq)','','AIQUM','def gb:tostring|[while(length>0;.[:-3])|.[-3:]]|reverse|join(\",\")+\"GB\";def roundit: .*100.0 + 0.5|floor/100.0;[.records[]|{Resource: (.cluster.name+\" : \"+.name)}+{Aggregate: .name}+{Cluster: .cluster.name}+{Node: .node.name}+{Size: (.space.block_storage.size/1024/1024/1024)|round|gb}+{AvailRaw:.space.block_storage.available}+{Available: (.space.block_storage.available/1024/1024/1024)|round|gb}+{Perf: (((.performance_capacity.used*100)|roundit|tostring)+\"%\")}+{Type: .type}]','(a, b) => a.AvailRaw < b.AvailRaw && 1 || -1','')"
        columns:
        - Resource
        - Node
        - Size
        - Available
        - Perf
        - Type
        noOutput: true
        default: __auto__
        required: true
        group: B2D2
        outputObject: true
        dependencies:         
        - name: b2d2
          values:
          - true          
      
      - type: expression       
        name: b2d2_cluster
        label: b2d2_cluster
        expression: "'$(b2d2_cluster_aggr.Cluster)'"
        hide: true
        group: B2D2
        model: b2d2.cluster
        dependencies:         
        - name: b2d2
          values:
          - true          

      - type: expression       
        name: b2d2_aggregate
        label: b2d2_aggregate
        expression: "'$(b2d2_cluster_aggr.Aggregate)'"
        hide: true
        group: B2D2
        model: b2d2.aggregate
        dependencies:         
        - name: b2d2
          values:
          - true              
      
      # will build a %7C (|) svm list that will be used for rest aiqum aggr filter 
      - type: expression
        name: b2d2_svm_filter_jq
        label: b2d2_svm_filter_jq
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d2\")|.clusters[]|.$(b2d2_cluster)|join(\"%7C\")')"
        group: B2D2
        noOutput: true
        dependencies:         
        - name: b2d2
          values:
          - true             

      - type: query
        name: b2d2_svm
        label: SVM
        expression: "fn.fnRestBasic('get','https://'+'$(aiqum)'+'/api/datacenter/svm/svms?cluster.name=$(b2d2_cluster)&name=$(b2d2_svm_filter_jq)','','AIQUM','[.records[]|{Name: .name}]','','')"
        columns:
        - Name
        required: true
        default: __auto__  
        group: B2D2
        model: b2d2.svm
        dependencies:         
        - name: b2d2
          values:
          - true  

      #B2D2 source
      - type: expression
        name: b2d2_source
        label: b2d2_source
        hide: true
        expression: "fn.fnReadYamlFile('/app/dist/persistent/globals.yaml','.services[] | select (.name==\"$(service.name)\")|.combinations[]| select(.company==\"$(company.name)\" and .environment==\"$(environment.name)\" and .location==\"$(location.name)\")|.copies[]|select(.type==\"b2d2\")|.source')"
        group: B2D2
        dependencies:         
        - name: b2d2
          values:
          - true
        model: b2d2.source